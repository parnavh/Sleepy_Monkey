{
	// Place your Discord bot workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Template": {
		"prefix": "temp",
		"body": [
		  "const { Message, CommandInteraction } = require(\"discord.js\");",
		  "const bot = require('../main/bot')",
		  "",
		  "module.exports = {",
		  "    name : '$TM_FILENAME_BASE',",
		  "    aliases : [''],",
		  "    description : '',",
		  "    usage : '',",
		  "    args : false,",
		  "    perms : ['SEND_MESSAGES'],",
		  "    disp : ['Send Messages'],",
		  "    options: [",
		  "        {",
		  "            \"name\": \"breed\",",
		  "            \"description\": \"The breed of penguin\",",
		  "            \"type\": 3,",
		  "            \"required\": true,",
		  "            \"choices\": [",
		  "                {",
		  "                    \"name\": \"Magellanic\",",
		  "                    \"value\": \"magellanic\"",
		  "                },",
		  "                {",
		  "                    \"name\": \"Emperor\",",
		  "                    \"value\": \"emperor\"",
		  "                }",
		  "            ]",
		  "        },",
		  "        {",
		  "            \"name\": \"stickers\",",
		  "            \"description\": \"Whether to show only stickers\",",
		  "            \"type\": 5,",
		  "            \"required\": false",
		  "        }",
		  "    ],",
		  "",
		  "    /** ",
		  "     * @param {Message} message",
		  "     * @param {bot} client",
		  "     * @param {Array} args",
		  "    */",
		  "    command_execute (client,message,args) {",
		  "        ",
		  "    },",
		  "",
		  "    /**",
		  "     * @param {bot} client",
		  "     * @param {CommandInteraction} interaction",
		  "     */",
		  "    interaction_execute (client, interaction) {",
		  "        ",
		  "    }",
		  "};"
		],
		"description": "Template"
	  }
}